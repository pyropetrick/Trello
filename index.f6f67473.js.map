{"mappings":"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","sources":["src/components/Common.block/Card/card.js"],"sourcesContent":["import {\n    showEditMenu,\n    showWarning,\n    modalTitle,\n    modalDesc,\n    modalWrapper,\n    currentUserName,\n    warningBtnConfirm,\n    warningBtnCancel,\n    closeWarning,\n} from '../modal/modal';\n\n// current states\n\nlet actionAdd = false;\nlet currentTaskEditId = 0;\nlet currentTaskWarning = 0;\nlet deleteAll = false;\n\n// arrays\n\nconst todos = [];\nconst progress = [];\nlet done = [];\n\n// buttons\n\nexport const btnAddTodo = document.querySelector('.card__button-add-todo');\nexport const btnDeleteAll = document.querySelector('.card__button-delete-all')\n\n// function add todos\nexport function addTodo() {\n    actionAdd = true;\n    showEditMenu();\n}\n// delete all done cards\nexport function deleteAllCards() {\n    showWarning('Вы уверены что хотите удалить все выполненные задачи?');\n    deleteAll = true;\n}\n// function confirm changes for warnings\nexport function onWarningConfirm() {\n    if (deleteAll) {\n        done = [];\n        renderTask(done, '.done-list');\n    }\n    else {\n        addToProgressFromTodos(currentTaskWarning);\n    }\n    closeWarning()\n}\n// function generate random color\nfunction randomRGB() {\n    const r = Math.floor(Math.random() * (256)),\n          g = Math.floor(Math.random() * (256)),\n          b = Math.floor(Math.random() * (256)),\n        color = `#${r.toString(16)}${g.toString(16)}${b.toString(16)}`;\n    return color\n}\n// function generate random id\nfunction randomId() {\n    const firstNumber = Math.floor(Math.random() * 10),\n        secondNumber = Math.floor(Math.random() * 10),\n        thirdNumber = Math.floor(Math.random() * 10),\n        fourNumber = Math.floor(Math.random() * 10),\n        fiveNumber = Math.floor(Math.random() * 10),\n        sixNumber = Math.floor(Math.random() * 10),\n        id = `${firstNumber}${secondNumber}${thirdNumber}${fourNumber}${fiveNumber}${sixNumber}`\n    return id;\n\n}\n// delete functions for every cards\nfunction deleteCard({target}) {\n    const card = target.parentNode.parentNode.parentNode\n    const cardId = +card.getAttribute('id');\n    const cardIdx = todos.findIndex(({id}) => id === cardId);\n    todos.splice(cardIdx, 1);\n    renderTask(todos, '.todos-list');\n}\nfunction deleteCardDone({target}) {\n    const card = target.parentNode.parentNode.parentNode\n    const cardId = +card.getAttribute('id');\n    const cardIdx = done.findIndex(({id}) => id === cardId);\n    done.splice(cardIdx, 1);\n    renderTask(done, '.done-list');\n}\n// edit function for task todos\nfunction onEdit({target}) {\n    const item = target.parentNode.parentNode.parentNode;\n    const itemId = +item.getAttribute('id');\n    currentTaskEditId = itemId;\n    const title = item.querySelector('.tasks-list__item-title').innerHTML;\n    const desc = item.querySelector('.tasks-list__item-desc').innerHTML;\n    modalTitle.value = title;\n    modalDesc.value = desc;\n    actionAdd = false;\n    showEditMenu();\n\n}\n// function render counters for list\nfunction renderCounter(list, currentList) {\n    let counter = document.querySelector(currentList);\n    counter.innerText = list.length;\n}\n// complete function for progress tasks\nfunction jumpToDone({ target }) {\n    const item = target.parentNode.parentNode.parentNode;\n    const idItem = +item.getAttribute('id');\n    const indexItem = progress.findIndex(({id}) => id === idItem);\n    done.push(progress[indexItem])\n    progress.splice(indexItem, 1);\n    renderTask(progress,'.progress-list');\n    renderTask(done, '.done-list');\n}\n// back function for progress tasks\nfunction jumpToDo({ target }) {\n    const item = target.parentNode.parentNode.parentNode;\n    const idItem = +item.getAttribute('id');\n    const indexItem = progress.findIndex(({id}) => id === idItem);\n    todos.push(progress[indexItem])\n    progress.splice(indexItem, 1);\n    renderTask(progress,'.progress-list');\n    renderTask(todos,'.todos-list');\n}\n\n// task go to progress functions\nfunction jumpToProgress({ target }) {\n    const item = target.parentNode.parentNode;\n    const idItem = +item.getAttribute('id');\n    const indexItem = todos.findIndex(({id}) => id === idItem);\n    if (progress.length >= 6){\n        deleteAll = false;\n        currentTaskWarning = indexItem\n        showWarning(`Вы пытаетесь добавить ${progress.length + 1} карточку в рабочую область. Вы уверены что справитесь с таким количеством задач ? `)\n    }\n    else  {\n        addToProgressFromTodos(indexItem);\n    } \n}\nfunction addToProgressFromTodos(idx) {\n    progress.push(todos[idx])\n    todos.splice(idx, 1);\n    renderTask(todos,'.todos-list');\n    renderTask(progress, '.progress-list');\n    closeWarning();\n}\n\n// render function for 3 lists(todos, progress, done)\n\nfunction renderTask(list, currentList) {\n    const tasksList = document.querySelector(currentList);\n    tasksList.innerHTML = '';\n    list.forEach(({id, titleTask, description, time, colorItem, userName}) => {\n        const task = document.createElement('li');\n        task.classList.add('tasks-list__item');\n        task.setAttribute('id', id);\n        task.setAttribute('draggable', true);\n        task.style.background = colorItem;\n\n        // titles \n        const titlesBlock = document.createElement('div');\n        titlesBlock.classList.add('tasks-list__item-titles');\n        \n        // title \n\n        const title = document.createElement('p');\n        title.classList.add('tasks-list__item-title');\n        title.innerText = titleTask;\n\n        // desc\n\n        const desc = document.createElement('p');\n        desc.classList.add('tasks-list__item-desc');\n        desc.innerText = description;\n\n        // user \n        const user = document.createElement('p');\n        user.classList.add('tasks-list__item-user');\n        user.innerText = userName;\n\n        // actions \n\n        const actionsBlock = document.createElement('div');\n        actionsBlock.classList.add('tasks-list__item-actions');\n\n        // editing block\n\n        const editBlock = document.createElement('div');\n        editBlock.classList.add('tasks-list__item-actions-editing');\n\n        // buttons\n        if (currentList === '.todos-list') {\n            const btnEdit = document.createElement('button');\n            btnEdit.classList.add('tasks-list__item-actions-edit');\n            btnEdit.classList.add('button-card');\n            btnEdit.innerHTML = 'Edit';\n            btnEdit.addEventListener('click', onEdit);\n\n            const btnDelete = document.createElement('button');\n            btnDelete.classList.add('tasks-list__item-actions-delete');\n            btnDelete.classList.add('button-card');\n            btnDelete.innerHTML = 'Delete';\n            btnDelete.addEventListener('click', deleteCard);\n\n            const btnJump = document.createElement('button');\n            btnJump.classList.add('tasks-list__item-actions-jump');\n            btnJump.classList.add('button-card');\n            btnJump.innerHTML = '>';\n            btnJump.addEventListener('click', jumpToProgress );\n\n            editBlock.append(btnEdit);\n            editBlock.append(btnDelete);\n            actionsBlock.append(editBlock);\n            actionsBlock.append(btnJump);\n\n\n        }\n        else if (currentList === '.progress-list') {\n            const btnBack = document.createElement('button')\n            btnBack.classList.add('tasks-list__item-actions-back');\n            btnBack.classList.add('button-card');\n            btnBack.innerHTML = 'Back';\n            btnBack.addEventListener('click', jumpToDo )\n\n            const btnComplete = document.createElement('button');\n            btnComplete.classList.add('tasks-list__item-actions-complete');\n            btnComplete.classList.add('button-card');\n            btnComplete.innerHTML = 'Complete';\n            btnComplete.addEventListener('click', jumpToDone)\n\n            actionsBlock.classList.add('progress-actions');\n\n            editBlock.append(btnBack);\n            editBlock.append(btnComplete);\n            actionsBlock.append(editBlock);\n        }\n        else if (currentList === '.done-list') {\n            const btnDelete = document.createElement('button');\n            btnDelete.classList.add('tasks-list__item-actions-delete');\n            btnDelete.classList.add('button-card');\n            btnDelete.innerHTML = 'Delete';\n            btnDelete.addEventListener('click', deleteCardDone);\n            task.style.background = '#00ce1b';\n            actionsBlock.classList.add('done-actions');\n\n            editBlock.append(btnDelete);\n            actionsBlock.append(editBlock);\n\n        }\n\n        // time \n\n        const timeCreate = document.createElement('p');\n        timeCreate.classList.add('tasks-list__item-actions-time');\n        timeCreate.innerHTML = time;\n\n        // composite to list\n\n        // titles \n        titlesBlock.append(title);\n        titlesBlock.append(desc);\n        titlesBlock.append(user);\n\n        // actions\n        actionsBlock.append(timeCreate);\n        \n        // task \n        task.append(titlesBlock);\n        task.append(actionsBlock);\n\n        // list \n        tasksList.append(task);\n\n        })\n    renderCounter(todos, '.todos-counter');\n    renderCounter(done, '.done-counter');\n    renderCounter(progress, '.progress-counter');\n\n}\n\n// confirm add task or edit changes\nexport function onConfirm()  {\n    if (actionAdd) {\n        let options = {\n            hour: 'numeric',\n            minute: 'numeric',\n        }\n        let date = new Date();\n        let color = randomRGB();\n        let idItem = randomId();\n        let todo = {\n            id: +idItem,\n            titleTask: modalTitle.value,\n            description: modalDesc.value,\n            time: date.toLocaleString('ru', options),\n            colorItem: color,\n            userName: currentUserName,\n        }\n\n        todos.push(todo);\n\n    } else {\n        let currentTaskIdx = todos.findIndex(task => task.id === currentTaskEditId)\n        todos[currentTaskIdx].titleTask = modalTitle.value;\n        todos[currentTaskIdx].description = modalDesc.value;\n        todos[currentTaskIdx].userName = currentUserName;\n    }\n    renderTask(todos,'.todos-list');\n    modalWrapper.classList.remove('active');\n    modalTitle.value = '';\n    modalDesc.value = '';\n}\n\n\n\n\n\n\n\n\n\n\n"],"names":["$bsOZu","parcelRequire","$74b95425b27bfa89$var$actionAdd","$74b95425b27bfa89$var$currentTaskEditId","$74b95425b27bfa89$var$currentTaskWarning","$74b95425b27bfa89$var$deleteAll","$74b95425b27bfa89$var$todos","$74b95425b27bfa89$var$progress","$74b95425b27bfa89$var$done","$74b95425b27bfa89$export$d616d90bc69cd85e","document","querySelector","$74b95425b27bfa89$export$2ca9f08fe6461764","$74b95425b27bfa89$export$61605cd041f63b9e","showEditMenu","$74b95425b27bfa89$export$551eac51da1a7831","showWarning","$74b95425b27bfa89$export$c282495a98cf2aeb","$74b95425b27bfa89$var$renderTask","$74b95425b27bfa89$var$addToProgressFromTodos","closeWarning","$74b95425b27bfa89$var$deleteCard","target","cardId","parentNode","getAttribute","cardIdx","findIndex","id","splice","$74b95425b27bfa89$var$deleteCardDone","$74b95425b27bfa89$var$onEdit","item","itemId","title","innerHTML","desc","modalTitle","value","modalDesc","$74b95425b27bfa89$var$renderCounter","list","currentList","innerText","length","$74b95425b27bfa89$var$jumpToDone","idItem","indexItem","push","$74b95425b27bfa89$var$jumpToDo","$74b95425b27bfa89$var$jumpToProgress","idx","tasksList","forEach","titleTask","description","time","colorItem","userName","task","createElement","classList","add","setAttribute","style","background","titlesBlock","user","actionsBlock","editBlock","btnEdit","addEventListener","btnDelete","btnJump","append","btnBack","btnComplete","btnDelete1","timeCreate","$74b95425b27bfa89$export$6312b3b8ade277da","options","hour","minute","date","Date","color","r","Math","floor","random","g","b","toString","$74b95425b27bfa89$var$randomRGB","todo","toLocaleString","currentUserName","currentTaskIdx","modalWrapper","remove"],"version":3,"file":"index.f6f67473.js.map"}