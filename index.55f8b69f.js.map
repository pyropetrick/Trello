{"mappings":"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","sources":["src/components/Common.block/Card/card.js"],"sourcesContent":["import{\n    showEditMenu,  \n    showWarning, \n    modalTitle, \n    modalDesc,\n    modalWrapper,\n    modalBtnConfirm,\n\n} from '../modal/modal'\n\nlet actionAdd = false;\nlet currentTaskEditId = 0;\nconst btnAddTodo = document.querySelector('.item-todo__button-add-todo');\nconst todos = [];\n\nfunction addTodo() {\n    actionAdd = true;\n    showEditMenu();\n}\n\nfunction randomRGB() {\n    const r = Math.floor(Math.random() * (256)),\n          g = Math.floor(Math.random() * (256)),\n          b = Math.floor(Math.random() * (256)),\n          color = `#${r.toString(16)}${g.toString(16)}${b.toString(16)}`;\n    return color\n}\n\nfunction deleteCard({target}) {\n    const card = target.parentNode.parentNode.parentNode\n    const cardId = +card.getAttribute('id');\n    const cardIdx = todos.findIndex(({id}) => id === cardId);\n    todos.splice(cardIdx, 1);\n    renderTodo();\n}\n\nfunction onEdit({target}) {\n    const item = target.parentNode.parentNode.parentNode;\n    const itemId = +item.getAttribute('id');\n    currentTaskEditId = itemId;\n    const title = item.querySelector('.tasks-list__item-title').innerHTML;\n    const desc = item.querySelector('.tasks-list__item-desc').innerHTML;\n    modalTitle.value = title;\n    modalDesc.value = desc;\n    actionAdd = false;\n    showEditMenu();\n\n}\n\nfunction renderCounter() {\n    const counter = document.querySelector('.item-todo__header-counter');\n    counter.innerHTML = todos.length;\n    \n}\n\nfunction renderTodo(list = todos) {\n    const tasksList = document.querySelector('.tasks-list');\n    tasksList.innerHTML = '';\n    list.forEach(({id, titleTask, description, time, colorItem}) => {\n        const task = document.createElement('li');\n        task.classList.add('tasks-list__item');\n        task.setAttribute('id', id);\n        task.setAttribute('draggable', true);\n        task.style.background = colorItem;\n\n        // titles \n        const titlesBlock = document.createElement('div');\n        titlesBlock.classList.add('tasks-list__item-titles');\n        \n        // title \n\n        const title = document.createElement('p');\n        title.classList.add('tasks-list__item-title');\n        title.innerText = titleTask;\n\n        // desc\n\n        const desc = document.createElement('p');\n        desc.classList.add('tasks-list__item-desc');\n        desc.innerText = description;\n\n        // user \n        const user = document.createElement('p');\n        user.classList.add('tasks-list__item-user');\n        user.innerText = '';\n\n        // actions \n\n        const actionsBlock = document.createElement('div');\n        actionsBlock.classList.add('tasks-list__item-actions');\n\n        // editing block\n\n        const editBlock = document.createElement('div');\n        editBlock.classList.add('tasks-list__item-actions-editing');\n\n        // buttons\n\n        const btnEdit = document.createElement('button');\n        btnEdit.classList.add('tasks-list__item-actions-edit');\n        btnEdit.innerHTML = 'Edit';\n        btnEdit.addEventListener('click', onEdit);\n\n        const btnDelete = document.createElement('button');\n        btnDelete.classList.add('tasks-list__item-actions-delete');\n        btnDelete.innerHTML = 'Delete';\n        btnDelete.addEventListener('click', deleteCard);\n\n        const btnJump = document.createElement('button');\n        btnJump.classList.add('tasks-list__item-actions-jump');\n        btnJump.innerHTML = '>';\n\n        // time \n\n        const timeCreate = document.createElement('p');\n        timeCreate.classList.add('tasks-list__item-actions-time');\n        timeCreate.innerHTML = time;\n\n        // composite to list\n\n        // titles \n        titlesBlock.append(title);\n        titlesBlock.append(desc);\n        titlesBlock.append(user);\n\n        // actions \n\n        editBlock.append(btnEdit);\n        editBlock.append(btnDelete);\n        actionsBlock.append(editBlock);\n        actionsBlock.append(btnJump);\n        actionsBlock.append(timeCreate);\n        \n        // task \n        task.append(titlesBlock);\n        task.append(actionsBlock);\n\n        // list \n        tasksList.append(task);\n\n        })\n\n        \n    renderCounter();\n}\n\nfunction onConfirm()  {\n    if (actionAdd) {\n        let options = {\n            hour: 'numeric',\n            minute: 'numeric',\n        }\n        let date = new Date();\n        let color = randomRGB();\n        let todo = {\n            id: Date.now(),\n            titleTask: modalTitle.value,\n            description: modalDesc.value,\n            time: date.toLocaleString('ru', options),\n            colorItem: color,\n        }\n\n        todos.push(todo);\n\n    } else {\n        let currentTaskIdx = todos.findIndex(task => task.id === currentTaskEditId)\n        todos[currentTaskIdx].titleTask = modalTitle.value;\n        todos[currentTaskIdx].description = modalDesc.value;\n    }\n    renderTodo();\n    modalWrapper.classList.remove('active');\n    modalTitle.value = '';\n    modalDesc.value = '';\n}\n\nbtnAddTodo.addEventListener('click', addTodo);\nmodalBtnConfirm.addEventListener('click', onConfirm);\n\n\n\n\n"],"names":["$kfrop","parcelRequire","$952677fe81bb372d$var$actionAdd","$952677fe81bb372d$var$currentTaskEditId","$952677fe81bb372d$var$btnAddTodo","document","querySelector","$952677fe81bb372d$var$todos","$952677fe81bb372d$var$deleteCard","target","cardId","parentNode","getAttribute","cardIdx","findIndex","id","splice","$952677fe81bb372d$var$renderTodo","$952677fe81bb372d$var$onEdit","item","itemId","title","innerHTML","desc","modalTitle","value","modalDesc","showEditMenu","list","tasksList","forEach","titleTask","description","time","colorItem","task","createElement","classList","add","setAttribute","style","background","titlesBlock","innerText","user","actionsBlock","editBlock","btnEdit","addEventListener","btnDelete","btnJump","timeCreate","append","length","modalBtnConfirm","options","hour","minute","date","Date","color","r","Math","floor","random","g","b","toString","$952677fe81bb372d$var$randomRGB","todo","now","toLocaleString","push","currentTaskIdx","modalWrapper","remove"],"version":3,"file":"index.55f8b69f.js.map"}